# Generated by Django 5.1.1 on 2024-09-19 04:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StartupDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startup_name', models.CharField(max_length=100)),
                ('founder_name', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('startup_stage', models.CharField(choices=[('Idea', 'Idea'), ('MVP', 'MVP'), ('Growth', 'Growth'), ('Scaling', 'Scaling')], max_length=50)),
                ('funding_status', models.CharField(choices=[('Bootstrapped', 'Bootstrapped'), ('Seed', 'Seed'), ('Series A', 'Series A'), ('Series B', 'Series B'), ('Series C', 'Series C')], max_length=50)),
                ('number_of_employees', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='NonFunctionalRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_time', models.IntegerField(help_text='Response Time in milliseconds')),
                ('throughput', models.IntegerField(help_text='Throughput in requests per second')),
                ('authentication', models.CharField(choices=[('OAuth', 'OAuth'), ('JWT', 'JWT'), ('Basic Auth', 'Basic Auth')], max_length=50)),
                ('authorization', models.CharField(choices=[('Role-Based Access Control', 'Role-Based Access Control'), ('Attribute-Based Access Control', 'Attribute-Based Access Control')], max_length=50)),
                ('uptime', models.FloatField(help_text='Uptime requirement in percentage')),
                ('backup', models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly')], max_length=50)),
                ('recovery', models.CharField(choices=[('Automated', 'Automated'), ('Manual', 'Manual')], max_length=50)),
                ('monitoring', models.CharField(choices=[('Enabled', 'Enabled'), ('Disabled', 'Disabled')], max_length=50)),
                ('budget', models.FloatField(help_text='Budget per month in USD')),
                ('cost_estimation', models.CharField(choices=[('Accurate', 'Accurate'), ('Approximate', 'Approximate')], max_length=50)),
                ('licensing', models.CharField(choices=[('Open Source', 'Open Source'), ('Commercial', 'Commercial')], max_length=50)),
                ('startup', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nonfunctional_requirements', to='main.startupdetails')),
            ],
        ),
        migrations.CreateModel(
            name='FunctionalRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_domain', models.CharField(choices=[('E-commerce', 'E-commerce'), ('FinTech', 'FinTech'), ('HealthTech', 'HealthTech'), ('EdTech', 'EdTech'), ('Social Media', 'Social Media')], max_length=50)),
                ('application_features', models.JSONField()),
                ('user_interface', models.JSONField()),
                ('data_management', models.JSONField()),
                ('expected_number_of_users', models.IntegerField()),
                ('expected_number_of_transactions', models.IntegerField()),
                ('cloud_provider', models.CharField(choices=[('AWS', 'AWS'), ('Azure', 'Azure'), ('GCP', 'GCP')], max_length=50)),
                ('deployment_model', models.CharField(choices=[('Single Region', 'Single Region'), ('Multi-Region', 'Multi-Region')], max_length=50)),
                ('startup', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='functional_requirements', to='main.startupdetails')),
            ],
        ),
    ]
